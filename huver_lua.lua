local base_path = "/usr/share/nginx/html/files" -- –ü—É—Ç—å –¥–ª—è —Ñ–∞–π–ª–æ–≤

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤
local function get_recent_files()
	local files = {}
	-- –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ base_path
	for file in io.popen("ls -t " .. base_path):lines() do
		if file:match("(%w+).html$") then
			local file_path = base_path .. "/" .. file
			local file_mod_time = os.date("%Y-%m-%d %H:%M:%S", lfs.attributes(file_path, "modification"))
			table.insert(files, { file = file, time = file_mod_time })
		end
	end

	-- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 20 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤
	local recent_files = {}
	for i = 1, math.min(20, #files) do
		table.insert(recent_files, files[i])
	end

	return recent_files
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞ –∏ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤
local function render_search_page()
	ngx.say([[
        <link rel="stylesheet" href="/style.css">
        <h2>üîç Search by ID</h2>
        <form action="/" method="get">
            <input type="text" name="id" placeholder="Enter ID" required>
            <button type="submit">Search</button>
        </form>
        <h3>Last 20 Files:</h3>
        <table>
            <tr>
                <th>File</th>
                <th>Modification Date</th>
            </tr>
    ]])

	local recent_files = get_recent_files()
	for _, file in ipairs(recent_files) do
		-- –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Ñ–∞–π–ª–∞
		local file_id = file.file:match("([a-zA-Z0-9_-]+).html$")
		ngx.say("<tr><td><a href='/" .. file_id .. "'>" .. file.file .. "</a></td><td>" .. file.time .. "</td></tr>")
	end

	ngx.say("</table>")
end

-- –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞
local file_id = ngx.var.file_id

if file_id then
	-- –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω file_id, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª
	-- –ó–¥–µ—Å—å –º—ã —É–±—Ä–∞–ª–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —á–∞—Å—Ç—å –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞, –∏—â–µ–º —Ç–æ–ª—å–∫–æ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É ID
	local found_file = nil
	for file in io.popen("ls " .. base_path):lines() do
		if file:match(file_id .. ".html$") then
			found_file = file
			break
		end
	end

	if found_file then
		local file_path = base_path .. "/" .. found_file
		local file = io.open(file_path, "r")

		if file then
			ngx.header.content_type = "text/html; charset=utf-8"
			ngx.say(file:read("*a"))
			file:close()
		else
			ngx.status = ngx.HTTP_NOT_FOUND
			ngx.say("<h1>‚ùå File not found</h1>")
		end
	else
		ngx.status = ngx.HTTP_NOT_FOUND
		ngx.say("<h1>‚ùå File not found</h1>")
	end
else
	-- –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞
	render_search_page()
end
